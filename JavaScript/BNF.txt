"a"

"b"

<Program>::= "a"+ | "b"+

<Program>::= <Program>"a"+ | <Program>"b"+

# 加法

<Number> ::= "0" | "1" | "2" | ... | "9"

<DecimalNumber> ::= "0" |  {{"1" | "2" | ... | "9"} "+" <Number>* }

<Expression> ::= <DecimalNumber> | <Expression> "+" <DecimalNumber>

# 四则运算

<Number> ::= "0" | "1" | "2" | ... | "9"

<DecimalNumber> ::= "0" | (("1" | "2" | "3" | ... | "9") "+" <Number>* )

<PrimaryExpress> ::= <DecimalNumber> |
  "(" <logicalExpress> ")"

<AddtiveExpression> ::= 
  <DecimalNumber> | 
  <AddtiveExpression> "+" <DecimalNumber>

<MultiplicativeExpression> ::= 
  <DecimalNumber> | 
  <MultiplicativeExpression> "*" <DecimalNumber> |
  <MultiplicativeExpression> "/" <DecimalNumber>

1 + 2 * 3

<AddtiveExpression> ::= 
  <MultiplicativeExpression> |
  <AddtiveExpression> "+" <MultiplicativeExpression> |
  <AddtiveExpression> "-" <MultiplicativeExpression>

<LogicalExpression> ::= <AddtiveExpression> | 
  <LogicalExpression> "||" <AddtiveExpression> |
  <LogicalExpression> "&&" <AddtiveExpression>

# for 循环

<FORSTATEMENT> ::=
  "for" "(" ( variable_declaration |
  ( expression ";") |
  (";") )
  [ expression ] ";"
  [ expression]
  ")" statement

# BNF 表示 BNF 规则

<Syntax> ::= 
  <Rule> |
  <Rule> <Syntax>

<Rule> ::= 
  <Opt-Whitespace> "<" <Rule-Name> ">" <Opt-Whitespace> "::=" <Opt-Whitespace> <Expression> <Line-End>

<Opt-Whitespace> ::=
  " " <Opt-Whitespace> | 
  ""

<Expression> ::=
  <List> |
  <List> <Opt-Whitespace> "|" <Opt-Whitespace> <Expression>

<Line-End> ::=
  <Opt-Whitespace> <EOL> |
  <Line-End> <Line-End>

<List> ::=
  <Term> | <Term> <Opt-Whitespace> <List>

<Term> ::=
  <Literal> |
  "<" <Rule-Name> ">"

<Literal> ::=
  '"'<Text1>'"' |
  "'"<Text2>"'"

<Text1> ::=
  "" |
  <Character1> <Text1>

<Text2> ::=
  "" |
  <Character2> <Text2>

<Character> ::=
  <Letter> |
  <digit> |
  <Symbol>

# classic expression grammar

<Expressiion> ::=
  <Term> |
  <Term> "+" <Expression>

<Term> ::=
  <Factor> |
  <Factor> "*" <Term>

<Factor> ::=
  "(" <Expression> ")" |
  <Const>

<Const> ::= <Integer>